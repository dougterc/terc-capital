}
orig <- expand.grid(c(1:n))
grid <- expand.grid(c(1:n))
grid <- orig %>%
mutate(key = 1) %>%
left_join(grid%>%mutate(key = 1),by=c("key"="key"))
grid <- grid[ ,-grep("key",colnames(grid))]
grid <- grid[(grid[, ncol(grid)-z] < grid[, ncol(grid)]), ]
grid
n <- 5
r <- 3
orig <- expand.grid(c(1:n))
grid <- expand.grid(c(1:n))
grid <- orig %>%
mutate(key = 1) %>%
left_join(grid%>%mutate(key = 1),by=c("key"="key"))
grid <- grid[ ,-grep("key",colnames(grid))]
grid <- grid[(grid[, ncol(grid)-z] < grid[, ncol(grid)]), ]
grid
n <- 5
r <- 3
orig <- expand.grid(c(1:n))
grid <- expand.grid(c(1:n))
grid
orig
grid <- orig %>%
mutate(key = 1) %>%
left_join(grid%>%mutate(key = 1),by=c("key"="key"))
grid
grid <- grid[ ,-grep("key",colnames(grid))]
grid
z
grid <- orig %>%
mutate(key = 1) %>%
left_join(grid%>%mutate(key = 1),by=c("key"="key"))
grid <- grid[ ,-grep("key",colnames(grid))]
grid
head(grid)
for(y in c(2:2)) {
print(y)
}
n <- 5
r <- 3
orig <- expand.grid(c(1:n))
for(i in seq(c(1:r))) {
if(i == 1) {
grid <- expand.grid(c(1:n))
} else {
grid <- orig %>%
mutate(key = 1) %>%
left_join(grid%>%mutate(key = 1),by=c("key"="key"))
grid <- grid[ ,-grep("key",colnames(grid))]
for(z in seq(ncol(grid)-1)) {
for(y in c(2:ncol(grid))) {
grid <- grid[(grid[,z] < grid[,y]) & (grid[,z] != grid[,y]), ]
}
}
}
}
grid
orig <- expand.grid(c(1:n))
for(i in seq(c(1:r))) {
if(i == 1) {
grid <- expand.grid(c(1:n))
} else {
grid <- orig %>%
mutate(key = 1) %>%
left_join(grid%>%mutate(key = 1),by=c("key"="key"))
grid <- grid[ ,-grep("key",colnames(grid))]
print(grid)
for(z in seq(ncol(grid)-1)) {
for(y in c(2:ncol(grid))) {
grid <- grid[(grid[,z] < grid[,y]) & (grid[,z] != grid[,y]), ]
}
}
}
}
orig <- expand.grid(c(1:n))
for(i in seq(c(1:r))) {
if(i == 1) {
grid <- expand.grid(c(1:n))
} else {
grid <- orig %>%
mutate(key = 1) %>%
left_join(grid%>%mutate(key = 1),by=c("key"="key"))
grid <- grid[ ,-grep("key",colnames(grid))]
print(grid)
for(z in seq(ncol(grid)-1)) {
for(y in c(2:ncol(grid))) {
grid <- grid[(grid[,z] < grid[,y]) && (grid[,z] != grid[,y]), ]
}
}
}
}
n <- 5
r <- 3
orig <- expand.grid(c(1:n))
for(i in seq(c(1:r))) {
if(i == 1) {
grid <- expand.grid(c(1:n))
} else {
grid <- orig %>%
mutate(key = 1) %>%
left_join(grid%>%mutate(key = 1),by=c("key"="key"))
grid <- grid[ ,-grep("key",colnames(grid))]
print(grid)
for(z in seq(ncol(grid)-1)) {
for(y in c(2:ncol(grid))) {
grid <- grid[(grid[,z] < grid[,y]), ]
}
}
}
}
grid
i <- 1
orig <- expand.grid(c(1:n))
if(i == 1) {
grid <- expand.grid(c(1:n))
} else {
grid <- orig %>%
mutate(key = 1) %>%
left_join(grid%>%mutate(key = 1),by=c("key"="key"))
grid <- grid[ ,-grep("key",colnames(grid))]
for(z in seq(ncol(grid)-1)) {
for(y in c(2:ncol(grid))) {
grid <- grid[(grid[,z] < grid[,y]), ]
}
}
}
grid
i <- 2
grid <- orig %>%
mutate(key = 1) %>%
left_join(grid%>%mutate(key = 1),by=c("key"="key"))
grid <- grid[ ,-grep("key",colnames(grid))]
grid
ncol(grid)
z <- 1
y <- 2
grid[(grid[,z] < grid[,y]), ]
n <- 5
r <- 2
orig <- expand.grid(c(1:n))
for(i in seq(c(1:r))) {
if(i == 1) {
grid <- expand.grid(c(1:n))
} else {
grid <- orig %>%
mutate(key = 1) %>%
left_join(grid%>%mutate(key = 1),by=c("key"="key"))
grid <- grid[ ,-grep("key",colnames(grid))]
for(z in c(1:(ncol(grid)-1))) {
for(y in c(2:ncol(grid))) {
grid <- grid[(grid[,z] < grid[,y]), ]
}
}
}
}
grid
i <- 3
grid <- orig %>%
mutate(key = 1) %>%
left_join(grid%>%mutate(key = 1),by=c("key"="key"))
grid
grid <- grid[ ,-grep("key",colnames(grid))]
grid
ncol(grid)
z <- 1
y <- 2
grid[(grid[,z] < grid[,y]), ]
grid <- grid[(grid[,z] < grid[,y]), ]
grid
y <- 3
grid[(grid[,z] < grid[,y]), ]
z <- 2
y <- 2
grid[(grid[,z] < grid[,y]), ]
n <- 5
r <- 2
orig <- expand.grid(c(1:n))
for(i in seq(c(1:r))) {
if(i == 1) {
grid <- expand.grid(c(1:n))
} else {
grid <- orig %>%
mutate(key = 1) %>%
left_join(grid%>%mutate(key = 1),by=c("key"="key"))
grid <- grid[ ,-grep("key",colnames(grid))]
for(z in c(1:(ncol(grid)-1))) {
for(y in c((z+1):ncol(grid))) {
grid <- grid[(grid[,z] < grid[,y]), ]
}
}
}
}
grid
n <- 5
r <- 3
orig <- expand.grid(c(1:n))
for(i in seq(c(1:r))) {
if(i == 1) {
grid <- expand.grid(c(1:n))
} else {
grid <- orig %>%
mutate(key = 1) %>%
left_join(grid%>%mutate(key = 1),by=c("key"="key"))
grid <- grid[ ,-grep("key",colnames(grid))]
for(z in c(1:(ncol(grid)-1))) {
for(y in c((z+1):ncol(grid))) {
grid <- grid[(grid[,z] < grid[,y]), ]
}
}
}
}
grid
n <- 5
r <- 3
orig <- expand.grid(c(1:n))
for(i in seq(c(1:r))) {
if(i == 1) {
grid <- expand.grid(c(1:n))
} else {
grid <- orig %>%
mutate(key = 1) %>%
left_join(grid%>%mutate(key = 1),by=c("key"="key"))
grid <- grid[ ,-grep("key",colnames(grid))]
for(z in c(1:(ncol(grid)-1))) {
for(y in c((z+1):ncol(grid))) {
grid <- grid[(grid[,z] < grid[,y]), ]
}
}
}
rownames(grid) <- c()
}
grid
n <- 20
r <- 5
orig <- expand.grid(c(1:n))
for(i in seq(c(1:r))) {
if(i == 1) {
grid <- expand.grid(c(1:n))
} else {
grid <- orig %>%
mutate(key = 1) %>%
left_join(grid%>%mutate(key = 1),by=c("key"="key"))
grid <- grid[ ,-grep("key",colnames(grid))]
for(z in c(1:(ncol(grid)-1))) {
for(y in c((z+1):ncol(grid))) {
grid <- grid[(grid[,z] < grid[,y]), ]
}
}
}
rownames(grid) <- c()
}
nrow(grid)
n <- 100
r <- 20
orig <- expand.grid(c(1:n))
for(i in seq(c(1:r))) {
if(i == 1) {
grid <- expand.grid(c(1:n))
} else {
grid <- orig %>%
mutate(key = 1) %>%
left_join(grid%>%mutate(key = 1),by=c("key"="key"))
grid <- grid[ ,-grep("key",colnames(grid))]
for(z in c(1:(ncol(grid)-1))) {
for(y in c((z+1):ncol(grid))) {
grid <- grid[(grid[,z] < grid[,y]), ]
}
}
}
rownames(grid) <- c()
}
n <- 50
r <- 10
orig <- expand.grid(c(1:n))
for(i in seq(c(1:r))) {
if(i == 1) {
grid <- expand.grid(c(1:n))
} else {
grid <- orig %>%
mutate(key = 1) %>%
left_join(grid%>%mutate(key = 1),by=c("key"="key"))
grid <- grid[ ,-grep("key",colnames(grid))]
for(z in c(1:(ncol(grid)-1))) {
for(y in c((z+1):ncol(grid))) {
grid <- grid[(grid[,z] < grid[,y]), ]
}
}
}
rownames(grid) <- c()
}
combo.count <- function(n, r) {
orig <- expand.grid(c(1:n))
for(i in seq(c(1:r))) {
if(i == 1) {
grid <- expand.grid(c(1:n))
} else {
grid <- orig %>%
mutate(key = 1) %>%
left_join(grid%>%mutate(key = 1),by=c("key"="key"))
grid <- grid[ ,-grep("key",colnames(grid))]
for(z in c(1:(ncol(grid)-1))) {
for(y in c((z+1):ncol(grid))) {
grid <- grid[(grid[,z] < grid[,y]), ]
}
}
}
rownames(grid) <- c()
}
return(nrow(grid))
}
combo.count(5, 3)
for(n in c(1:10)) {
for(r in c(1:5)) {
if(n == 1 & r == 1) {
df <- tribble(
~n,~r,~c,
n,r,combo.count(n, r)
)
} else {
df <- add_row(
df,
n = n,
r = r,
c = combo.count(n, r)
)
}
}
}
df
combo.get <- function(n, r) {
orig <- expand.grid(c(1:n))
for(i in seq(c(1:r))) {
if(i == 1) {
grid <- expand.grid(c(1:n))
} else {
grid <- orig %>%
mutate(key = 1) %>%
left_join(grid%>%mutate(key = 1),by=c("key"="key"))
grid <- grid[ ,-grep("key",colnames(grid))]
for(z in c(1:(ncol(grid)-1))) {
for(y in c((z+1):ncol(grid))) {
grid <- grid[(grid[,z] < grid[,y]), ]
}
}
}
rownames(grid) <- c()
}
items <- list(grid, nrow(grid)) %>%
`names<-`(c("grid","count"))
return(items)
}
combo.get <- function(n, r) {
orig <- expand.grid(c(1:n))
for(i in seq(c(1:r))) {
if(i == 1) {
grid <- expand.grid(c(1:n))
} else {
grid <- orig %>%
mutate(key = 1) %>%
left_join(grid%>%mutate(key = 1),by=c("key"="key"))
grid <- grid[ ,-grep("key",colnames(grid))]
for(z in c(1:(ncol(grid)-1))) {
for(y in c((z+1):ncol(grid))) {
grid <- grid[(grid[,z] < grid[,y]), ]
}
}
}
rownames(grid) <- c()
}
items <- list(grid, nrow(grid)) %>%
`names<-`(c("grid","count"))
return(items)
}
for(n in c(1:10)) {
for(r in c(1:5)) {
if(n == 1 & r == 1) {
df <- tribble(
~n,~r,~c,
n,r,combo.get(n, r)$count
)
} else {
df <- add_row(
df,
n = n,
r = r,
c = combo.get(n, r)$count
)
}
}
}
df
combo.get(1,4)
combo.get(1,3)
combo.get(1,2)
combo.get(1,1)
combo.get(2,1)
for(n in c(1:10)) {
for(r in c(1:5)) {
if(n > r) {
if(n == 2 & r == 1) {
df <- tribble(
~n,~r,~c,
n,r,combo.get(n, r)$count
)
} else {
df <- add_row(
df,
n = n,
r = r,
c = combo.get(n, r)$count
)
}
} else {
}
}
}
df
combo.get(5,2)
for(n in c(1:20)) {
for(r in c(1:10)) {
if(n > r) {
if(n == 2 & r == 1) {
df <- tribble(
~n,~r,~c,
n,r,combo.get(n, r)$count
)
} else {
df <- add_row(
df,
n = n,
r = r,
c = combo.get(n, r)$count
)
}
} else {
}
}
}
combo.get <- function(n, r) {
orig <- expand.grid(c(1:n))
for(i in seq(c(1:r))) {
if(i == 1) {
grid <- expand.grid(c(1:n))
} else {
grid <- orig %>%
mutate(key = 1) %>%
left_join(grid%>%mutate(key = 1),by=c("key"="key"))
grid <- grid[ ,-grep("key",colnames(grid))]
for(z in c(1:(ncol(grid)-1))) {
for(y in c((z+1):ncol(grid))) {
grid <- grid[(grid[,z] < grid[,y]), ]
}
}
}
rownames(grid) <- c()
}
items <- list(grid, nrow(grid)) %>%
`names<-`(c("grid","count"))
return(items)
}
for(n in c(1:20)) {
for(r in c(1:10)) {
if(n > r) {
print(c(n, r))
if(n == 2 & r == 1) {
df <- tribble(
~n,~r,~c,
n,r,combo.get(n, r)$count
)
} else {
df <- add_row(
df,
n = n,
r = r,
c = combo.get(n, r)$count
)
}
} else {
}
}
}
nrow(df)
nrow(df)
combo.get(20,10)
for(n in c(1:20)) {
for(r in c(1:10)) {
if(n > r) {
print(c(n, r))
if(n == 2 & r == 1) {
df <- tribble(
~n,~r,~c,
n,r,combo.get(n, r)$count
)
} else {
df <- add_row(
df,
n = n,
r = r,
c = combo.get(n, r)$count
)
}
} else {
}
}
}
tail(df)
38760-15504
+38760
23256+38760
